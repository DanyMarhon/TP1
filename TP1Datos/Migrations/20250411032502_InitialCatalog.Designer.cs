// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TP1Datos;

#nullable disable

namespace TP1Datos.Migrations
{
    [DbContext(typeof(MarketContext))]
    [Migration("20250411032502_InitialCatalog")]
    partial class InitialCatalog
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TP1Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Dni")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Nombre", "Apellido" }, "Clientes_Nombre_Apellido")
                        .IsUnique();

                    b.ToTable("Clientes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellido = "Marhon",
                            Dni = 40377284,
                            Nombre = "Daniel"
                        });
                });

            modelBuilder.Entity("TP1Entities.Orden", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<DateOnly>("FechaOrden")
                        .HasColumnType("Date");

                    b.Property<int>("NumeroOrden")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasMaxLength(100)
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex(new[] { "NumeroOrden", "ClienteId" }, "Orden_Numero_ClienteId")
                        .IsUnique();

                    b.ToTable("Ordenes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClienteId = 1,
                            FechaOrden = new DateOnly(1986, 10, 30),
                            NumeroOrden = 1,
                            Valor = 0.0
                        },
                        new
                        {
                            Id = 2,
                            ClienteId = 1,
                            FechaOrden = new DateOnly(1953, 10, 10),
                            NumeroOrden = 2,
                            Valor = 0.0
                        });
                });

            modelBuilder.Entity("TP1Entities.Orden", b =>
                {
                    b.HasOne("TP1Entities.Cliente", "Cliente")
                        .WithMany("Ordenes")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("TP1Entities.Cliente", b =>
                {
                    b.Navigation("Ordenes");
                });
#pragma warning restore 612, 618
        }
    }
}
